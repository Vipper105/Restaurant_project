package tp.kits3.livedinner.DAO;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import javax.naming.Context;
import javax.naming.InitialContext;
import javax.sql.DataSource;

import tp.kits3.livedinner.VO.Contact;

public class ContactDAO {

	DataSource dataSource;
	Connection conn;

	public ContactDAO() {

		try {
			Context ctx = new InitialContext();
			Context envx = (Context) ctx.lookup("java:/comp/env");
			this.dataSource = (DataSource) envx.lookup("jdbc/mariadb");
			this.conn = this.dataSource.getConnection();
		} catch (Exception ex) {
			ex.printStackTrace();
		}

	}

	// Get all list
	public List<Contact> findAllContact() {

		Connection conn = null;
		ResultSet rs = null;
		PreparedStatement ps = null;

		List<Contact> listContact = new ArrayList<Contact>();

		try {
			conn = this.dataSource.getConnection();
			String sql_selectAll = "select * from contact";
			ps = conn.prepareStatement(sql_selectAll);
			rs = ps.executeQuery();

			while (rs.next()) {
				Contact con = new Contact();
				con.setCoid(rs.getInt("coid"));
				con.setConame(rs.getString("coname"));
				con.setPriphone(rs.getString("priphone"));
				con.setEmail(rs.getString("email"));
				con.setAddress(rs.getString("address"));

				boolean isCheckUnused;
				if (rs.getInt("unused") == 1) {
					isCheckUnused = true;
				} else {
					isCheckUnused = false;
				}

				con.setUnused(isCheckUnused);
				con.setOpening(rs.getString("opening"));
				con.setWeekday(rs.getString("weekday"));
				con.setAboutus(rs.getString("aboutus"));
				con.setLatitude(rs.getDouble("latitude"));
				con.setLogitude(rs.getDouble("logitude"));

				listContact.add(con);

			}

		} catch (Exception e) {
			e.printStackTrace();

		} finally {

			if (conn != null) {
				try {
					conn.close();
				} catch (Exception ex) {
					ex.printStackTrace();
				}
			}

			if (rs != null) {
				try {
					rs.close();
				} catch (Exception e2) {
					e2.printStackTrace();
				}
			}

			if (ps != null) {
				try {
					ps.close();
				} catch (Exception e3) {
					e3.printStackTrace();
				}
			}

		}

		return listContact;
	}

	// Add contact
	public void addContact(Contact contact) {
		Connection conn = null;
		ResultSet rs = null;
		PreparedStatement ps = null;
		

		try {
			conn=this.dataSource.getConnection();
			String queryAdd="INSERT INTO contact (coname,priphone,email,address,unused,opening,weekday,aboutus,latitude,logitude) "
					+ "values (?,?,?,?,?,?,?,?,?,?)";
			
			ps=conn.prepareStatement(queryAdd);
			ps.setString(1,contact.getConame());
			ps.setString(2,contact.getPriphone());
			ps.setString(3,contact.getEmail());
			ps.setString(4, contact.getAddress());
			ps.setBoolean(5, contact.getUnused());
			ps.executeUpdate();
			
		
		} catch (Exception e) {

		} finally {
			if (conn != null) {
				try {
					conn.close();
				} catch (Exception ex) {
					ex.printStackTrace();
				}
			}

			if (rs != null) {
				try {
					rs.close();
				} catch (Exception e2) {
					e2.printStackTrace();
				}
			}

			if (ps != null) {
				try {
					ps.close();
				} catch (Exception e3) {
					e3.printStackTrace();
				}
			}
		}

	}

}
